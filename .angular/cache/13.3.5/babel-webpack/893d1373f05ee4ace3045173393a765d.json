{"ast":null,"code":"import { NavParams, ModalController, AlertController } from '@ionic/angular';\nimport { FileTransfer } from '@ionic-native/file-transfer/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\nimport { Downloader, DownloadRequest, NotificationVisibility } from '@ionic-native/downloader/ngx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic-native/downloader/ngx\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@ionic-native/file-transfer/ngx\";\nimport * as i4 from \"@ionic-native/file/ngx\";\nimport * as i5 from \"@ionic-native/android-permissions/ngx\";\nexport let ModalViewPage = /*#__PURE__*/(() => {\n  class ModalViewPage {\n    constructor(downloader, alertController, transfer, navParams, modalController, file, AndroidPermissions) {\n      this.downloader = downloader;\n      this.alertController = alertController;\n      this.transfer = transfer;\n      this.navParams = navParams;\n      this.modalController = modalController;\n      this.file = file;\n      this.AndroidPermissions = AndroidPermissions;\n    }\n\n    ngOnInit() {\n      this.img = this.navParams.get('img');\n    }\n\n    closeModal() {\n      this.modalController.dismiss();\n    }\n\n    download(img) {\n      var object = img;\n      this.AndroidPermissions.hasPermission(this.AndroidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE).then(status => {\n        if (status.hasPermission) {\n          this.veriFy(object);\n        } else {\n          this.AndroidPermissions.requestPermission(this.AndroidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE).then(status => {\n            if (status.hasPermission) {\n              this.veriFy(object);\n            }\n          });\n        }\n      });\n    }\n\n    veriFy(img) {\n      const request = {\n        uri: img.largeImageURL,\n        title: img.id.toString() + '_img.jpg',\n        description: \"Images Store Downloading By: @Dev_EDRA.\",\n        mimeType: 'image/jpg/png',\n        visibleInDownloadsUi: true,\n        notificationVisibility: NotificationVisibility.VisibleNotifyCompleted,\n        destinationInExternalPublicDir: {\n          dirType: 'Download_Istore',\n          subPath: img.id.toString() + '_img.jpg'\n        }\n      };\n      this.downloader.download(request).then(() => {\n        this.presentAlert(location);\n      }, err => {\n        const alert = this.alertController.create({\n          header: 'ERROR! Download',\n          mode: 'ios',\n          message: JSON.stringify(err).toString(),\n          buttons: ['OK'],\n          cssClass: 'alertPush'\n        });\n        alert.then(data => {\n          data.present();\n        });\n      });\n    }\n\n    presentAlert(location) {\n      const alert = this.alertController.create({\n        header: 'GOOD! Download Processed',\n        mode: 'ios',\n        message: 'The image has been downloaded to your device and.\\n' + location,\n        buttons: ['OK'],\n        cssClass: 'alertPush'\n      });\n      alert.then(data => {\n        data.present();\n      });\n    }\n\n  }\n\n  ModalViewPage.ɵfac = function ModalViewPage_Factory(t) {\n    return new (t || ModalViewPage)(i0.ɵɵdirectiveInject(i1.Downloader), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i3.FileTransfer), i0.ɵɵdirectiveInject(i2.NavParams), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i4.File), i0.ɵɵdirectiveInject(i5.AndroidPermissions));\n  };\n\n  ModalViewPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalViewPage,\n    selectors: [[\"app-modal-view\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[\"fullscreen\", \"\"], [\"lines\", \"none\", 1, \"close-fake\"], [\"fill\", \"clear\", \"color\", \"light\", 3, \"click\"], [\"name\", \"close\", \"slot\", \"start\"], [1, \"swiper-zoom-container\"], [\"width\", \"100%\", 1, \"image-container\", 3, \"src\"], [2, \"width\", \"100%\", \"text-align\", \"center\", \"align-self\", \"center\", \"justify-content\", \"center\"], [\"fill\", \"clear\", 1, \"buttonDownload\", 3, \"click\"], [\"name\", \"download\", \"slot\", \"start\"], [\"name\", \"download\", \"slot\", \"end\"]],\n    template: function ModalViewPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function ModalViewPage_Template_ion_button_click_2_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵelement(3, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"ion-slides\")(5, \"ion-slide\")(6, \"div\", 4);\n        i0.ɵɵelement(7, \"ion-img\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"ion-item\", 1)(9, \"div\", 6)(10, \"ion-button\", 7);\n        i0.ɵɵlistener(\"click\", function ModalViewPage_Template_ion_button_click_10_listener() {\n          return ctx.download(ctx.img);\n        });\n        i0.ɵɵtext(11, \" HERE DOWNLOAD \");\n        i0.ɵɵelement(12, \"ion-icon\", 8)(13, \"ion-icon\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"src\", ctx.img.webformatURL);\n      }\n    },\n    directives: [i2.IonContent, i2.IonButton, i2.IonIcon, i2.IonSlides, i2.IonSlide, i2.IonImg, i2.IonItem],\n    styles: [\".close-fake[_ngcontent-%COMP%]{--background: transparent}.close-fake[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:1.6rem}ion-content[_ngcontent-%COMP%]{--background: black}.buttonDownload[_ngcontent-%COMP%]{border:2px solid white!important;color:#fff}ion-img[_ngcontent-%COMP%]{margin-top:4%;margin-bottom:4%;height:450px!important}.alertPush[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return ModalViewPage;\n})();","map":null,"metadata":{},"sourceType":"module"}